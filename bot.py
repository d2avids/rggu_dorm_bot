import os
import logging
import sys

from googleapiclient.discovery import build
from google.oauth2 import service_account
from googleapiclient.errors import HttpError

import telegram
from telegram.ext import Updater, CommandHandler
from dotenv import load_dotenv

load_dotenv()

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')

SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
SERVICE_ACCOUNT_FILE = 'keys.json'

CREDS = service_account.Credentials.from_service_account_file(
        SERVICE_ACCOUNT_FILE, scopes=SCOPES)

EVENTS_SPREADSHEET_ID = '1pYIZt4S7ZtrDJqbJeaYr14cCqnQ1HhGbViOu_Jsrnrk'
EVENTS_INFO_RANGE = 'events!A1:C50'
COMMANDS_INFO_RANGE = 'commands!A1:B2'

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥
START_MESSAGE = (
    '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π @Achililes –Ω–∞ '
    '–Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –æ—Å–Ω–æ–≤–µ. –¢—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–º '
    '–¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é '
    '–æ –∂–∏–∑–Ω–∏ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏ –†–ì–ì–£ –∏ –Ω–µ —Ç–æ–ª—å–∫–æ :) '
    '–ù–∞–∂–∏–º–∞–π –Ω–∞ –∑–Ω–∞—á–æ–∫ "/" –≤–æ–∑–ª–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å '
    '–¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏.\n'
    '\n–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–≤–æ–±–æ–¥–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ —Ç—É—Ç: '
    'https://github.com/d2avids/rggu_dorm_bot'
)
CONTACTS_MESSAGE = (
    '–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç–æ–≤:\n'
    '–ü–∞—Ç–∏–º–∞—Ç +7-495-250-65-44\n'
    '–ë–∞—Ö–∞—Ä–µ–≤–∞ (–∑–∞–≤. –æ–±—â–µ–∂–∏—Ç–∏–µ–º) +7-495-388-63-43'
)
CONTACTS2_MESSAGE = (
       '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –æ—Ç–¥–µ–ª\n'
       '\n–¢–µ–ª–µ—Ñ–æ–Ω: +7 (495) 250-65-14\n'
       '–ü–æ—á—Ç–∞: adm_ums@rggu.ru\n'
       '–ê–¥—Ä–µ—Å: –ú–æ—Å–∫–≤–∞, –ú–∏—É—Å—Å–∫–∞—è –ø–ª–æ—â–∞–¥—å, –¥. 6, –∫–æ—Ä–ø. 6, –∫–∞–±. 303'
    )
GUEST_MESSAGE = '–ö–∞–∫ –ø—É—Å–∫–∞—Ç—å –≥–æ—Å—Ç–µ–π –æ–ø–∏—Å–∞–Ω–æ —Ç—É—Ç:'
GRAF_MESSAGE = '–ì—Ä–∞—Ñ–∏–∫ —Å–º–µ–Ω—ã –±–µ–ª—å—è –Ω–∏–∂–µ:'
GRAF0_MESSAGE = (
    'üîπ –î–ù–ï–í–ù–´–ï –ö–û–ú–ï–ù–î–ê–ù–¢–´:\n'
    '–ü–ù-–ß–¢: 9:30 –¥–æ 17:45\n'
    '–ü–¢: 9:30 - 16:30\n'
    'üçΩ –û–±–µ–¥: 12:30-13:30\n'
    '\nüåÉ –ù–æ—á–Ω–æ–π –∫–æ–º–µ–Ω–¥–∞–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∂–¥—ã–π '
    '–¥–µ–Ω—å —Å 18:00 –¥–æ 6:00 (–Ω–∞–π—Ç–∏ –º–æ–∂–Ω–æ –≤ '
    '–∫–∞–±–∏–Ω–µ—Ç–µ –Ω–∞–ø—Ä–æ—Ç–∏–≤ –ø–æ—Å—Ç–∞ –æ—Ö—Ä–∞–Ω—ã)'
)
GRAF1_MESSAGE = (
    'üí∞ –û–¢–î–ï–õ –ü–û –°–û–¶–ò–ê–õ–¨–ù–´–ú –í–û–ü–†–û–°–ê–ú (226)\n'
    '–ü–Ω.-—á—Ç.: —Å 10:00 –¥–æ 17.30\n'
    '–ü—Ç.: —Å 10:00 –¥–æ 16.30\n'
    '–û–±–µ–¥: —Å 14.00 –¥–æ 15.00\n'

    '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (495) 250-63-99\n'
    '–ü–æ—á—Ç–∞ (–≤—ã–ø–ª–∞—Ç—ã –∏ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏): stip@rggu.ru\n'
    '–ü–æ—á—Ç–∞ (–æ–±—â–µ–∂–∏—Ç–∏–µ): hostel@rggu.ru\n'
)
GRAF2_MESSAGE = (
    '–ü–ê–°–ü–û–†–¢–ù–´–ô –°–¢–û–õ:\n'
    '\n–ü–ù-–í–¢.: 9.30 - 17.00\n'
    '–°—Ä–µ–¥–∞: 9.30 - 12.30\n'
    '–ß–µ—Ç–≤–µ—Ä–≥:  9.30 -17.00\n'
    '–ü—è—Ç–Ω–∏—Ü–∞:  9.30 - 12.30\n'
    '\nüçΩ –û–±–µ–¥ —Å 12.30 –¥–æ 13.30'
)
GRAF3_MESSAGE = (
    '–í–¢–û–†–û–ô –û–¢–î–ï–õ (–í–û–ï–ù–ù–û-–£–ß–ï–¢–ù–´–ô –°–¢–û–õ) - 175\n'
    '\n–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-—á–µ—Ç–≤–µ—Ä–≥ —Å 9.00 –¥–æ 17.00\n'
    '–ø—è—Ç–Ω–∏—Ü–∞ —Å 9.00 –¥–æ 16.00\n'
    '–ø–µ—Ä–µ—Ä—ã–≤ –Ω–∞ –æ–±–µ–¥ —Å 12.00 –¥–æ 13.00\n'

    '–¢–µ–ª–µ—Ñ–æ–Ω—ã: +7 (499) 251-36-04  +7 (495) 250-69-30\n'
    '–ü–æ—á—Ç–∞: ii-otdel@rggu.ru'
)
GRAF4_MESSAGE = (
    '–ë–Æ–†–û –ü–†–û–ü–£–°–ö–û–í:\n'
    '\n–ü–ù.-–ß–¢.: —Å 9:00 –¥–æ 17:00\n'
    '–ü–¢.: —Å 9:00 –¥–æ 16:00\n'
    '–°–ë.-–í–°. ‚Äì –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏'
)

SOCIAL_DEPARTMENT_URL = ('https://rsuh.ru/hostel/contacts'
                         '/the-department-of-work-with-students/')
GRAF_URL = 'https://t.me/newsyangelya/139'
CONTACTS_URL = 'https://t.me/newsyangelya/4'
GUESTS_URL = 'https://t.me/newsyangelya/52'
PRICE_BUTTON_URL = 'https://t.me/c/1189451602/165226'

# –ù–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏–∑ static
BLANKS_FILE = '–ë–ª–∞–Ω–∫ –Ω–∞ –ø—Ä–æ–ø—É—Å–∫ –≥–æ—Å—Ç–µ–π.doc'
BLANKS1_FILE = '–ë–ª–∞–Ω–∫ –Ω–∞ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω–∏–µ –≤ –¥—Ä. –∫–æ–º–Ω–∞—Ç—É.docx'
BLANKS2_FILE = '–†–∞—Å–ø–∏—Å–∫–∞ –ø—Ä–∏ –≤—ã—Å–µ–ª–µ–Ω–∏–∏.docx'
BLANKS3_FILE = '–í–≤–æ–∑ –∏–ª–∏ –≤—ã–≤–æ–∑ –≤–µ—â–µ–π.docx'
BLANKS4_FILE = '–ë–ª–∞–Ω–∫ –Ω–∞ –≤—ä–µ–∑–¥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.docx'
FINSUPPORT_FILE = '–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–∞—Ç. –ø–æ–º–æ—â—å.docx'

# –°–æ–æ–±—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫
NO_TOKENS = (
            '–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è '
            '–≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. '
            '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏—Ö: {tokens}'
        )
NO_KEYS_JSON = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª keys.json —Å –∫–ª—é—á–∞–º–∏ Google API.'
NO_REPLY = '–û—à–∏–±–∫–∞ API Telegram –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {}'
NOT_LIST_API = '–û—Ç–≤–µ—Ç Google Sheets API –æ–∂–∏–¥–∞–ª—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ø–∏—Å–∫–∞'
NOT_LIST_RAWS = 'Google Sheets API –≤–µ—Ä–Ω—É–ª —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ'
GOOGLE_API_HTTPERROR = '–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Google Sheets API: {}'
GOOGLE_UNEXPECTED_ERROR = '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ {}'
BOT_AUTH_ERROR = '–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞. –û—à–∏–±–∫–∞: {}'
TG_API_FAIL = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å API {}'

# –°–æ–æ–±—â–µ–Ω–∏—è INFO –∏ DEBUG
BOT_AUTH_SUCCESS = '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!'
REPLY_SUCCESS = '–†–µ–ø–ª–∞–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!'

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
STATIC_DIR = os.path.join(BASE_DIR, 'static')

logging.basicConfig(
    format='%(asctime)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger('bot')
logger.setLevel(logging.DEBUG)
console_handler = logging.StreamHandler(sys.stdout)
logger.addHandler(console_handler)


def check_tokens():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–æ–≤ –∏ –∫–ª—é—á–µ–π –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏."""
    token_miss = []

    if not TELEGRAM_TOKEN:
        token_miss.append('TELEGRAM_TOKEN')

    if token_miss:
        error_message = NO_TOKENS.format(tokens=token_miss)
        logger.critical(error_message)
        return False

    if not os.path.exists(SERVICE_ACCOUNT_FILE):
        logger.critical(NO_KEYS_JSON)
        return False

    return True


def reply(update, message, keyboard=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –ª–æ–≥ –∏—Å–∫–ª—é—á–µ–Ω–∏—è."""
    try:
        update.message.reply_text(
            text=message,
            reply_markup=keyboard,
            parse_mode='HTML',
            )
        logger.debug(REPLY_SUCCESS)
    except telegram.error.TelegramError as e:
        logger.error(NO_REPLY.format(e))


def reply_file(update, file):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –∏–ª–∏ –ª–æ–≥ –∏—Å–∫–ª—é—á–µ–Ω–∏—è."""
    try:
        with open(file, 'rb') as file:
            update.message.reply_document(document=file)
            logger.debug(REPLY_SUCCESS)
    except telegram.error.TelegramError as e:
        logging.error(NO_REPLY.format(e))


def get_events():
    """–ü–æ–ª—É—á–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏–∑ Excel —Ñ–∞–π–ª–∞."""
    try:
        service = build('sheets', 'v4', credentials=CREDS)
        sheet = service.spreadsheets()
        result = sheet.values().get(spreadsheetId=EVENTS_SPREADSHEET_ID,
                                    range=EVENTS_INFO_RANGE).execute()
        data = result.get('values')
        return check_google_sheets_response(data)
    except HttpError as e:
        logging.error(GOOGLE_API_HTTPERROR.format(e))
    except Exception as e:
        logging.error(GOOGLE_UNEXPECTED_ERROR.format(e))


def get_command_text():
    """–ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥ –∏–∑ Excel —Ñ–∞–π–ª–∞."""
    try:
        service = build('sheets', 'v4', credentials=CREDS)
        sheet = service.spreadsheets()
        result = sheet.values().get(spreadsheetId=EVENTS_SPREADSHEET_ID,
                                    range=COMMANDS_INFO_RANGE).execute()
        data = result.get('values')
        return check_google_sheets_response(data)
    except HttpError as e:
        logging.error(GOOGLE_API_HTTPERROR.format(e))
    except Exception as e:
        logging.error(GOOGLE_UNEXPECTED_ERROR.format(e))


def check_google_sheets_response(data):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ Google Sheets API."""
    if not isinstance(data, list):
        raise TypeError(NOT_LIST_API)

    if not isinstance(data[0], list):
        raise TypeError(NOT_LIST_RAWS)

    return data


def price_button():
    """–ö–Ω–æ–ø–∫–∞ —Å —Ü–µ–Ω–∞–º–∏ –∏ —É—Å–ª–æ–≤–∏—è–º–∏ –Ω–∞ –ø–µ—á–∞—Ç—å –∏ —Å–∫–∞–Ω."""
    button = telegram.InlineKeyboardButton(
        '–¶–µ–Ω—ã –∏ —É—Å–ª–æ–≤–∏—è',
        url=PRICE_BUTTON_URL,
    )
    keyboard = telegram.InlineKeyboardMarkup([[button]])
    return keyboard


def start(update, context):
    """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ, –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º."""
    reply(update, START_MESSAGE)


def p_rint(update, context):
    """/print –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—á–∞—Ç–∏ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏."""
    print_message = get_command_text()[1][0]
    reply(update, print_message, price_button())


def scan(update, context):
    """/scan –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏."""
    scan_message = get_command_text()[1][1]
    reply(update, scan_message, price_button())


def guests(update, context):
    """/guests –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–ø—É—Å–∫—É –≥–æ—Å—Ç–µ–π –≤ –æ–±—â–µ–∂–∏—Ç–∏–µ."""

    button = telegram.InlineKeyboardButton(
        '–ö–∞–∫ –ø—É—Å–∫–∞—Ç—å –≥–æ—Å—Ç–µ–π',
        url=GUESTS_URL,
    )
    keyboard = telegram.InlineKeyboardMarkup([[button]])

    reply(update, GUEST_MESSAGE, keyboard)


def contacts(update, context):
    """/contacts –∫–æ–Ω—Ç–∞–∫—Ç—ã –∫–æ–º–µ–Ω–¥–∞–Ω—Ç–æ–≤."""
    button = telegram.InlineKeyboardButton(
        '–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã',
        url=CONTACTS_URL,
    )
    keyboard = telegram.InlineKeyboardMarkup([[button]])

    reply(update, CONTACTS_MESSAGE, keyboard)


def contacts1(update, context):
    """/contacts1 –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ü. –æ—Ç–¥–µ–ª–∞"""
    button = telegram.InlineKeyboardButton(
        '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
        url=SOCIAL_DEPARTMENT_URL,
    )
    keyboard = telegram.InlineKeyboardMarkup([[button]])

    reply(update, GRAF1_MESSAGE, keyboard)


def contacts2(update, context):
    """/contacts2 –∫–æ–Ω—Ç–∞–∫—Ç—ã –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞."""
    reply(update, CONTACTS2_MESSAGE)


def graf(update, context):
    """/graf –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–º–µ–Ω–µ –±–µ–ª—å—è."""
    button = telegram.InlineKeyboardButton(
        '–ì—Ä–∞—Ñ–∏–∫ —Å–º–µ–Ω—ã –±–µ–ª—å—è',
        url=GRAF_URL,
    )
    keyboard = telegram.InlineKeyboardMarkup([[button]])

    reply(update, GRAF_MESSAGE, keyboard)


def graf0(update, context):
    """/graf0 –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–º–µ–Ω–µ –±–µ–ª—å—è."""
    reply(update, GRAF0_MESSAGE)


def graf1(update, context):
    """/graf1 –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–µ —Å–æ—Ü.–æ—Ç–¥–µ–ª–∞."""
    button = telegram.InlineKeyboardButton(
        '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
        url=SOCIAL_DEPARTMENT_URL,
    )
    keyboard = telegram.InlineKeyboardMarkup([[button]])

    reply(update, GRAF1_MESSAGE, keyboard)


def graf2(update, context):
    """/graf2 –≥—Ä–∞—Ñ–∏–∫ –ø–∞—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ç–æ–ª–∞."""
    reply(update, GRAF2_MESSAGE)


def graf3(update, context):
    """/graf3 –≥—Ä–∞—Ñ–∏–∫ –≤–æ–µ–Ω–Ω–æ–≥–æ —Å—Ç–æ–ª–∞."""
    reply(update, GRAF3_MESSAGE)


def graf4(update, context):
    """/graf4 –≥—Ä–∞—Ñ–∏–∫ –±—é—Ä–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤."""
    reply(update, GRAF4_MESSAGE)


def blanks(update, context):
    """/blanks –±–ª–∞–Ω–∫ –Ω–∞ –ø—Ä–æ–ø—É—Å–∫ –≥–æ—Å—Ç–µ–π."""
    file_path = os.path.join(
        STATIC_DIR,
        BLANKS_FILE
    )
    reply_file(update, file_path)


def blanks1(update, context):
    """/blanks1 –±–ª–∞–Ω–∫ –Ω–∞ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω–∏–µ –≤ –¥—Ä. –∫–æ–º–Ω–∞—Ç—É."""
    file_path = os.path.join(
        STATIC_DIR,
        BLANKS1_FILE,
    )
    reply_file(update, file_path)


def blanks2(update, context):
    """/blanks2 —Ä–∞—Å–ø–∏—Å–∫–∞ –ø—Ä–∏ –≤—ã—Å–µ–ª–µ–Ω–∏–∏."""
    file_path = os.path.join(
        STATIC_DIR,
        BLANKS2_FILE,
    )
    reply_file(update, file_path)


def blanks3(update, context):
    """/blanks3 –±–ª–∞–Ω–∫ –Ω–∞ –≤–≤–æ–∑/–≤—ã–≤–æ–∑ —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –º–µ–±–µ–ª–∏"""
    file_path = os.path.join(
        STATIC_DIR,
        BLANKS3_FILE,
    )
    reply_file(update, file_path)


def blanks4(update, context):
    """/blanks4 –±–ª–∞–Ω–∫ –Ω–∞ –≤—ä–µ–∑–¥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è."""
    file_path = os.path.join(
        STATIC_DIR,
        BLANKS4_FILE,
    )
    reply_file(update, file_path)


def finsupport(update, context):
    """/finsupport –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–∞—Ç. –ø–æ–º–æ—â—å."""
    file_path = os.path.join(
        STATIC_DIR,
        FINSUPPORT_FILE,
    )
    reply_file(update, file_path)


def events(update, context):
    """/events reply –æ—Ç–≤–µ—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π."""
    date = get_events()

    text = '–°–ø–∏—Å–æ–∫ –±–ª–∏–∂–∞–π—à–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:\n'
    for i in range(1, len(date)):
        text += (
            f'\n{date[0][0]} üïò: {date[i][0]}\n'
            f'{date[0][1]} üé≤: {date[i][1]}\n'
            f'{date[0][2]} ‚úçÔ∏è: –ß–∏—Ç–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –º–æ–∂–Ω–æ '
            f'<a href="{date[i][2]}">–∑–¥–µ—Å—å</a>\n'
        )

    reply(update, text)


def main():
    "–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞."
    try:
        updater = Updater(TELEGRAM_TOKEN, use_context=True)
    except telegram.error.TelegramError as e:
        logger.error(TG_API_FAIL.format(e))

    dispatcher = updater.dispatcher
    start_handler = CommandHandler('start', start)
    print_handler = CommandHandler('print', p_rint)
    scan_hadnler = CommandHandler('scan', scan)
    guests_handler = CommandHandler('guests', guests)
    contacts_handler = CommandHandler('contacts', contacts)
    contacts1_handler = CommandHandler('contacts1', contacts1)
    contacts2_handler = CommandHandler('contacts2', contacts2)
    graf_handler = CommandHandler('graf', graf)
    graf_0_handler = CommandHandler('graf0', graf0)
    graf_1_handler = CommandHandler('graf1', graf1)
    graf_2_handler = CommandHandler('graf2', graf2)
    graf_3_handler = CommandHandler('graf3', graf3)
    graf_4_handler = CommandHandler('graf4', graf4)
    blanks_handler = CommandHandler('blanks', blanks)
    blanks_handler = CommandHandler('blanks', blanks)
    blanks_1_handler = CommandHandler('blanks1', blanks1)
    blanks_2_handler = CommandHandler('blanks2', blanks2)
    blanks_3_handler = CommandHandler('blanks3', blanks3)
    blanks_4_handler = CommandHandler('blanks4', blanks4)
    finsup_handler = CommandHandler('finsupport', finsupport)
    events_handler = CommandHandler('events', events)

    dispatcher.add_handler(start_handler)
    dispatcher.add_handler(print_handler)
    dispatcher.add_handler(scan_hadnler)
    dispatcher.add_handler(guests_handler)
    dispatcher.add_handler(contacts_handler)
    dispatcher.add_handler(contacts1_handler)
    dispatcher.add_handler(contacts2_handler)
    dispatcher.add_handler(graf_handler)
    dispatcher.add_handler(graf_0_handler)
    dispatcher.add_handler(graf_1_handler)
    dispatcher.add_handler(graf_2_handler)
    dispatcher.add_handler(graf_3_handler)
    dispatcher.add_handler(graf_4_handler)
    dispatcher.add_handler(blanks_handler)
    dispatcher.add_handler(blanks_1_handler)
    dispatcher.add_handler(blanks_2_handler)
    dispatcher.add_handler(blanks_3_handler)
    dispatcher.add_handler(blanks_4_handler)
    dispatcher.add_handler(finsup_handler)
    dispatcher.add_handler(events_handler)

    try:
        updater.start_polling()
        logger.info(BOT_AUTH_SUCCESS)
        updater.idle()
    except telegram.error.TelegramError as e:
        logger.critical(BOT_AUTH_ERROR.format(e))
        raise


if __name__ == '__main__':
    if not check_tokens():
        sys.exit(1)
    main()
